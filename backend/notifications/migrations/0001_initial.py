# Generated by Django 5.2 on 2025-06-02 20:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('appointment', 'Appointment'), ('prescription', 'Prescription'), ('message', 'Message'), ('system', 'System')], default='system', max_length=20, verbose_name='Notification Type')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_read', models.BooleanField(default=False, verbose_name='Read')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Sent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Scheduled Time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_appointment_reminders', models.BooleanField(default=True, verbose_name='Email Appointment Reminders')),
                ('email_prescription_updates', models.BooleanField(default=True, verbose_name='Email Prescription Updates')),
                ('email_messages', models.BooleanField(default=True, verbose_name='Email Messages')),
                ('email_system_updates', models.BooleanField(default=True, verbose_name='Email System Updates')),
                ('sms_appointment_reminders', models.BooleanField(default=False, verbose_name='SMS Appointment Reminders')),
                ('sms_prescription_updates', models.BooleanField(default=False, verbose_name='SMS Prescription Updates')),
                ('sms_messages', models.BooleanField(default=False, verbose_name='SMS Messages')),
                ('push_appointment_reminders', models.BooleanField(default=True, verbose_name='Push Appointment Reminders')),
                ('push_prescription_updates', models.BooleanField(default=True, verbose_name='Push Prescription Updates')),
                ('push_messages', models.BooleanField(default=True, verbose_name='Push Messages')),
                ('push_system_updates', models.BooleanField(default=True, verbose_name='Push System Updates')),
                ('appointment_reminder_time', models.PositiveIntegerField(default=24, verbose_name='Appointment Reminder Time (hours)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification Setting',
                'verbose_name_plural': 'Notification Settings',
            },
        ),
    ]
