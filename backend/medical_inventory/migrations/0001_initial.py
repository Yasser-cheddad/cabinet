# Generated by Django 5.2 on 2025-06-02 20:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Supplier Name')),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Person')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('rating', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rating (0-5)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='medical_inventory.inventorycategory', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name': 'Inventory Category',
                'verbose_name_plural': 'Inventory Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Item Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sku', models.CharField(max_length=50, unique=True, verbose_name='SKU')),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, verbose_name='Barcode')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Current Quantity')),
                ('unit', models.CharField(default='unit', max_length=50, verbose_name='Unit')),
                ('minimum_stock', models.PositiveIntegerField(default=5, verbose_name='Minimum Stock Level')),
                ('maximum_stock', models.PositiveIntegerField(default=100, verbose_name='Maximum Stock Level')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Purchase Price')),
                ('status', models.CharField(choices=[('in_stock', 'In Stock'), ('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('discontinued', 'Discontinued'), ('on_order', 'On Order')], default='in_stock', max_length=20, verbose_name='Status')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('storage_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Storage Location')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='medical_inventory.inventorycategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('usage', 'Usage'), ('adjustment', 'Adjustment'), ('return', 'Return'), ('transfer', 'Transfer'), ('expired', 'Expired')], max_length=20, verbose_name='Transaction Type')),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('quantity_before', models.PositiveIntegerField(verbose_name='Quantity Before')),
                ('quantity_after', models.PositiveIntegerField(verbose_name='Quantity After')),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Reference ID')),
                ('reference_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Reference Type')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='medical_inventory.inventoryitem', verbose_name='Item')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Performed By')),
            ],
            options={
                'verbose_name': 'Inventory Transaction',
                'verbose_name_plural': 'Inventory Transactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='Order Number')),
                ('order_date', models.DateField(verbose_name='Order Date')),
                ('expected_delivery_date', models.DateField(blank=True, null=True, verbose_name='Expected Delivery Date')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Actual Delivery Date')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('ordered', 'Ordered'), ('partially_received', 'Partially Received'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Total Amount')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Shipping Cost')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tax Amount')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_purchase_orders', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_purchase_orders', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='medical_inventory.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.PositiveIntegerField(verbose_name='Quantity Ordered')),
                ('quantity_received', models.PositiveIntegerField(default=0, verbose_name='Quantity Received')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Unit Price')),
                ('is_fully_received', models.BooleanField(default=False, verbose_name='Fully Received')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_order_items', to='medical_inventory.inventoryitem', verbose_name='Item')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='medical_inventory.purchaseorder', verbose_name='Purchase Order')),
            ],
            options={
                'verbose_name': 'Purchase Order Item',
                'verbose_name_plural': 'Purchase Order Items',
                'unique_together': {('purchase_order', 'item')},
            },
        ),
    ]
